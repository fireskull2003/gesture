import cv2
import mediapipe as mp
import pyautogui
import screen_brightness_control as svc

x1 = y1 = x2 = y2 = x3 = y3 = 0

webcam = cv2.VideoCapture(0)
my_hands = mp.solutions.hands.Hands()
drawing_utils = mp.solutions.drawing_utils

while True:
    sucess, image = webcam.read()
    image = cv2.flip(image, 1)
    frame_height, frame_width, _ = image.shape
    rgb_image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    output = my_hands.process(rgb_image)
    hands = output.multi_hand_landmarks
    if hands:
        for hand in hands:
            drawing_utils.draw_landmarks(image, hand)
            landmarks = hand.landmark
            for id, landmark in enumerate(landmarks):
                x = int(landmark.x * frame_width)
                y = int(landmark.y * frame_height)
                if id == 20:
                    cv2.circle(img=image, center=(x, y), radius=8, color=(0, 255, 255), thickness=3)
                    x1 = x
                    y1 = y
                if id == 4:
                    cv2.circle(img=image, center=(x, y), radius=8, color=(0, 0, 255), thickness=3)
                    y2 = y
                    x2 = x
                if id == 8:
                    cv2.circle(img=image, center=(x, y), radius=8, color=(255, 255, 255), thickness=3)
                    x3 = x
                    y3 = y
            dist = (((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5) // 4
            cv2.line(image, (x1, y1), (x2, y2), (0, 255, 0), 3)
            if dist > 50:
                pyautogui.press("volumeup")
            else:
                pyautogui.press("volumedown")
            dist1 = (((x3 - x2) ** 2 + (y3 - y2) ** 2) ** 0.5) // 4
            cv2.line(image, (x3, y3), (x2, y2), (245, 255, 200), 3)
            svc.set_brightness(int(dist1))
            if dist1 < 10:
                pyautogui.keyDown("alt")
                pyautogui.press("tab")
                pyautogui.keyUp("alt")

    cv2.imshow("Img", image)
    key = cv2.waitKey(10)
    if key == 27:
        break

webcam.release()
cv2.destroyAllWindows()
